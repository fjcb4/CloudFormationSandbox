AWSTemplateFormatVersion: 2010-09-09
Description: Creacion Ec2 para servicio sanbox

############################## Parameters ####################################################

Parameters:
  pEnvironment:
    Type: String
    AllowedValues:
      - dev
      - qa
      - pdn
    Description: Enter environment dev, qa, pdn.
    Default: dev
  
  pImportBase:
    Description: The base name of the imported objetcs
    Type: String
    Default: aw1205001-modernizacion-mft

  myKeyPair: 
    Description: Amazon EC2 Key Pair
    Type: "AWS::EC2::KeyPair::KeyName"


  # pPassphrase:
  #   Description: passphrase
  #   Type: String
  #   NoEcho: true
  # pUserDG:
  #   Description: user DG
  #   Type: String
  #   NoEcho: true

  # pSFTPPort:
  #   Type: Number
  #   Description: Puerto servicio SFTP.
  #   Default: 10026
  # pFTPSPort:
  #   Type: Number
  #   Description: Puerto servicio SFTP.
  #   Default: 8032
  # pCDPort:
  #   Type: Number
  #   Description: Puerto servicio SFTP.
  #   Default: 1364


############################## Mappings ####################################################
Mappings:
  mSterling:
    dev: 
      InstanceType: "t2.micro"          
      ImageId: "ami-0b0af3577fe5e3532" #Red Hat Enterprise Linux 8 
      EbsVolumeSize: 10
      EbsVolumeSize2: 10
      DisableApiTermination: "false"
      Subnet1: "subnet-03537d0e8b9cfae20" #mft-public-A 1
      Subnet2: "subnet-0f2f5b594e51d0623" #mft-public-B 1
      Subnet3: "subnet-026692b4101281cd8" #mft-private-A 2
      Subnet4: "subnet-0f2f5b594e51d0623" #mft-private-B 2
      # NlbCidrIp1: 10.104.28.0/24 # segmento Subred donde se desplegarÃ¡ el Nlb
      # NlbCidrIp2: AWS::NoValue
      # NlbCidrIp3: AWS::NoValue
      # NlbSFTPPort: 10026
      # NlbFTPSPort: 8032
      # NlbCDPort: 1364
      # RdsCidrIp1: 10.104.31.0/25
      # RdsCidrIp2: AWS::NoValue
      # Deploymentgroupname: "AW1205001_Sterling_ComponentesComunes"
      # DeploymentgroupPath: "/azagent" 
    qa: 
      InstanceType: "t2.micro"          
      ImageId: "ami-0b0af3577fe5e3532" #Red Hat Enterprise Linux 8 
      EbsVolumeSize: 10
      EbsVolumeSize2: 10
      DisableApiTermination: "false"
      Subnet1: "subnet-03537d0e8b9cfae20" #mft-public-A 1
      Subnet2: "subnet-0f2f5b594e51d0623" #mft-public-B 1
      Subnet3: "subnet-026692b4101281cd8" #mft-private-A 2
      Subnet4: "subnet-0f2f5b594e51d0623" #mft-private-B 2   

  oracle:
    dev: 
      BackupRetentionPeriod: 8
      Engine: "oracle-ee"
      EngineVersion: "19.0.0.0.ru-2021-01.rur-2021-01.r2"
      instanceClass: "db.m5.large"
      MultiAZ: false              
      port: "1433"
      PreferredMaintenanceWindow: Sun:07:00-Sun:09:00
      PreferredBackupWindow: "05:00-06:00"
      Daticaluser: "CNXDATID"
      EnableCloudwatchLogsExports:
        - trace
        - audit
        - alert
        - listener
      allocatedStorage: 100
      maxAllocatedStorage: 300 
      storageType: "gp2"
      # AWSKeyManagementServicePowerUser: 
      #   - arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser
      #   - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      DBName: MFTDDB

############################## Conditions ####################################################
Conditions:  
  envNoDev: !Not [ !Equals [Ref: pEnvironment, "dev"]] 
  

############################## Resources ####################################################
Resources:

############################################################################################################
# Segmento Publico
############################################################################################################


####################################   Security Groups  ####################################################

  rSecurityGroupEc2Public: 
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ["",[!Ref 'AWS::StackName', "-public-sg"]] 
      GroupDescription: security group para el EC2
      SecurityGroupIngress:  
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
          Description: Allow access to the EC2 APP from Public
      VpcId: vpc-070ca66092c150cc0   
      Tags:
        - Key: Name
          Value: !Join ["",[!Ref 'AWS::StackName', "-public-sg"]]

  

####################################   EC2      ####################################################
# Instancia Perimeter
####################################################################################################

  rEc2PSNodo1:
    Type: AWS::EC2::Instance
  # Condition: envNoDev  # >> depende del ambiente
    Properties:
      DisableApiTermination: !FindInMap [mSterling, !Ref pEnvironment, DisableApiTermination]
      SecurityGroupIds:
        - !Ref rSecurityGroupEc2Public
      SubnetId: !FindInMap [mSterling, !Ref pEnvironment, Subnet1]  # >> Pilas Subnet 1
      Monitoring: True
      InstanceType: !FindInMap [mSterling, !Ref pEnvironment, InstanceType]
      ImageId: !FindInMap [mSterling, !Ref pEnvironment, ImageId]
      # IamInstanceProfile: !Ref rEC2InstanceProfileSFG
      Tags:
        - Key: Name
          Value: !Join ["", [!Ref 'pImportBase',"-ps-nodo1-ec2"]]   
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !FindInMap [mSterling, !Ref pEnvironment, EbsVolumeSize]
      KeyName: !Ref myKeyPair
      #UserData:
      # 
      # Nombre de la maquina h

#####################################################################################
## Segmento Privado
#####################################################################################
  
  rSecurityGroupEc2Private: 
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Join ["",[!Ref 'AWS::StackName', "-private-sg"]] 
      GroupDescription: security group para el EC2
      SecurityGroupIngress:  
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
          Description: Allow access to the EC2 APP from Subnet Private
        - IpProtocol: tcp
          FromPort: 1433
          ToPort: 1433
          CidrIp: 0.0.0.0/0
          Description: Allow access to the RDS APP from Subnet Private  
      VpcId: vpc-070ca66092c150cc0   
      Tags:
        - Key: Name
          Value: !Join ["",[!Ref 'AWS::StackName', "-private-sg"]]
####SG subnet RDS ################
  rSubnetGroupRDS:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupDescription: 
          Fn::Join: ["-", [Ref: 'AWS::StackName' , "subnetgroup"]]
        DBSubnetGroupName: 
          Fn::Join: ["-", [Ref: 'AWS::StackName' , "subnetgroup"]]
        SubnetIds:
          - subnet-010e7f6e238fce8be #Subnet PDN
        Tags:
          - Key: Name
            Value: 
              Fn::Join: ["-", [Ref: 'AWS::StackName' , "subnetgroup"]]
              

  # Instancia Sterling Nodo1 
  rEc2SterlingNodo1:
    Type: AWS::EC2::Instance
    Properties:
      DisableApiTermination: !FindInMap [mSterling, !Ref pEnvironment, DisableApiTermination]
      SecurityGroupIds:
        - !Ref rSecurityGroupEc2Private     
      SubnetId: !FindInMap [mSterling, !Ref pEnvironment, Subnet3]  # >> Pilas Subnet 1 
      Monitoring: True
      InstanceType: !FindInMap [mSterling, !Ref pEnvironment, InstanceType]
      ImageId: !FindInMap [mSterling, !Ref pEnvironment, ImageId]
      Tags:
        - Key: Name
          Value: !Join ["", [!Ref 'pImportBase',"-sfg-nodo1-ec2"]]  
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !FindInMap [mSterling, !Ref pEnvironment, EbsVolumeSize]
      KeyName: !Ref myKeyPair
      #UserData:
      # 
      # Nombre de la maquina